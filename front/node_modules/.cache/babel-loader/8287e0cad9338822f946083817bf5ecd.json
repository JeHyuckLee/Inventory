{"ast":null,"code":"import { Line, mixin } from 'vue-chartjs'; //또는 'vue-chartjs/legacy'\n\nconst {\n  reactiveProp\n} = mixin;\nexport default {\n  name: 'UseChart',\n  extends: Line,\n  mixin: [reactiveProp],\n  props: ['options'],\n\n  mounted() {\n    // this.chartData is created in the mixin.\n    // If you want to pass options please create a local options object\n    this.renderChart(this.chartData, this.options);\n  }\n\n};","map":{"version":3,"mappings":"AAGA,SAASA,IAAT,EAAeC,KAAf,QAA4B,aAA5B,C,CAA0C;;AAC1C,MAAM;EAAEC;AAAF,IAAmBD,KAAzB;AAEA,eAAe;EACbE,IAAI,EAAE,UADO;EAEbC,OAAO,EAAEJ,IAFI;EAGbC,KAAK,EAAE,CAACC,YAAD,CAHM;EAIbG,KAAK,EAAE,CAAC,SAAD,CAJM;;EAKbC,OAAO,GAAG;IACR;IACA;IACA,KAAKC,WAAL,CAAiB,KAAKC,SAAtB,EAAiC,KAAKC,OAAtC;EACD;;AATY,CAAf","names":["Line","mixin","reactiveProp","name","extends","props","mounted","renderChart","chartData","options"],"sourceRoot":"","sources":["D:\\project\\Inventory\\front\\src\\components\\useChart.vue"],"sourcesContent":["<line-chart :options=\"options\" :chartData=\"chartData\"></line-chart>\r\n\r\n<script>\r\nimport { Line, mixin } from 'vue-chartjs' //또는 'vue-chartjs/legacy'\r\nconst { reactiveProp } = mixin\r\n\r\nexport default {\r\n  name: 'UseChart',\r\n  extends: Line,\r\n  mixin: [reactiveProp],\r\n  props: ['options'],\r\n  mounted() {\r\n    // this.chartData is created in the mixin.\r\n    // If you want to pass options please create a local options object\r\n    this.renderChart(this.chartData, this.options)\r\n  },\r\n}\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}