{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n\n  return _openBlock(), _createBlock(_component_Line, {\n    \"chart-options\": _ctx.chartOptions,\n    \"chart-data\": _ctx.chartData,\n    \"chart-id\": _ctx.chartId,\n    \"dataset-id-key\": _ctx.datasetIdKey,\n    plugins: _ctx.plugins,\n    \"css-classes\": _ctx.cssClasses,\n    styles: _ctx.styles,\n    width: _ctx.width,\n    height: _ctx.height\n  }, null, 8\n  /* PROPS */\n  , [\"chart-options\", \"chart-data\", \"chart-id\", \"dataset-id-key\", \"plugins\", \"css-classes\", \"styles\", \"width\", \"height\"]);\n}","map":{"version":3,"mappings":";;;;uBACEA,aACkGC,eADlG,EACkG;IAD3F,iBAAeC,iBAC4E;IAD7D,cAAYA,cACiD;IADrC,YAAUA,YAC2B;IADjB,kBAAgBA,iBACC;IAA/FC,OAAO,EAAED,YAAsF;IAA5E,eAAaA,eAA+D;IAAlDE,MAAM,EAAEF,WAA0C;IAAjCG,KAAK,EAAEH,UAA0B;IAAlBI,MAAM,EAAEJ;EAAU,CADlG;;EAAA","names":["_createBlock","_component_Line","_ctx","plugins","styles","width","height"],"sourceRoot":"","sources":["D:\\project\\Inventory\\front\\src\\components\\useChart.vue"],"sourcesContent":["<template>\r\n  <Line :chart-options=\"chartOptions\" :chart-data=\"chartData\" :chart-id=\"chartId\" :dataset-id-key=\"datasetIdKey\"\r\n    :plugins=\"plugins\" :css-classes=\"cssClasses\" :styles=\"styles\" :width=\"width\" :height=\"height\" />\r\n</template>\r\n\r\n<script>\r\nimport { Line } from 'vue-chartjs' //또는 'vue-chartjs/legacy'\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  LinearScale,\r\n  PointElement,\r\n  CategoryScale\r\n} from 'chart.js'\r\n\r\nChartJS.register(\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  LinearScale,\r\n  PointElement,\r\n  CategoryScale\r\n)\r\n\r\nexport default {\r\n  name: 'UseChart',\r\n  extends: Line,\r\n  props: ['options'],\r\n  mounted() {\r\n    // this.chartData is created in the mixin.\r\n    // If you want to pass options please create a local options object\r\n    this.renderChart(this.chartData, this.options)\r\n  },\r\n}\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}