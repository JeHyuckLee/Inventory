{"ast":null,"code":"import axios from 'axios';\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  computed: { ...mapState(['postList', 'commentList', 'todayDate'])\n  },\n\n  created() {\n    this.post = this.postList.find(this.findPost);\n    this.comment = this.commentList.filter(comment => comment.post_id == this.$route.params.id);\n  },\n\n  methods: { ...mapActions(['getCommentList']),\n\n    findPost(element) {\n      if (element.post_id == this.$route.params.id) {\n        return true;\n      }\n    },\n\n    postComment(id) {\n      axios.post(`/api/community/comment/${id}`, {\n        text: this.text,\n        postDate: this.todayDate\n      }).then(() => {\n        this.getCommentList();\n        this.comment = this.commentList.find(this.findPost);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n\n  },\n\n  data() {\n    return {\n      post: null,\n      text: null,\n      comment: []\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAyBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,MAArC;AAEA,eAAe;EACbC,QAAQ,EAAC,EAAC,GAAGD,QAAQ,CAAC,CAAC,UAAD,EAAY,aAAZ,EAA0B,WAA1B,CAAD;EAAZ,CADI;;EAEbE,OAAO,GAAE;IACP,KAAKC,IAAL,GAAY,KAAKC,QAAL,CAAcC,IAAd,CAAmB,KAAKC,QAAxB,CAAZ;IACA,KAAKC,OAAL,GAAe,KAAKC,WAAL,CAAiBC,MAAjB,CAAwBF,OAAO,IAAEA,OAAO,CAACG,OAAR,IAAiB,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAArE,CAAf;EAED,CANY;;EAObC,OAAO,EAAC,EACN,GAAGf,UAAU,CAAC,CAAC,gBAAD,CAAD,CADP;;IAENO,QAAQ,CAACS,OAAD,EAAS;MACf,IAAGA,OAAO,CAACL,OAAR,IAAmB,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAzC,EAA4C;QAC1C,OAAO,IAAP;MACF;IACD,CANK;;IAONG,WAAW,CAACH,EAAD,EAAI;MACbf,KAAK,CAACK,IAAN,CAAY,0BAAyBU,EAAG,EAAxC,EAA0C;QACxCI,IAAI,EAAC,KAAKA,IAD8B;QAExCC,QAAQ,EAAC,KAAKC;MAF0B,CAA1C,EAICC,IAJD,CAIM,MAAI;QACR,KAAKC,cAAL;QACA,KAAKd,OAAL,GAAe,KAAKC,WAAL,CAAiBH,IAAjB,CAAsB,KAAKC,QAA3B,CAAf;MACD,CAPD,EAQCgB,KARD,CAQQC,GAAD,IAAO;QACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACD,CAVD;IAWD;;EAnBK,CAPK;;EA4BbG,IAAI,GAAE;IACJ,OAAM;MACJvB,IAAI,EAAC,IADD;MAEJc,IAAI,EAAC,IAFD;MAGJV,OAAO,EAAC;IAHJ,CAAN;EAKF;;AAlCa,CAAf","names":["axios","mapActions","mapState","computed","created","post","postList","find","findPost","comment","commentList","filter","post_id","$route","params","id","methods","element","postComment","text","postDate","todayDate","then","getCommentList","catch","err","console","error","data"],"sourceRoot":"","sources":["C:\\Users\\J.H.Lee\\Documents\\ProjectFiles\\Inventory Management\\Inventory\\front\\src\\pages\\Monitoring\\CommunityDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-content\">\r\n    <h5>\r\n      {{post.author}}\r\n    </h5>\r\n    <p>\r\n      {{post.post_date}}\r\n    </p>\r\n    <p>{{post.text}}</p>\r\n  </div>\r\n  <div class=\"post-comment\" v-for=\"item in comment\" :key=\"item\">\r\n    <h5>{{item.author}}</h5>\r\n    <p>{{item.postdate}}</p>\r\n    <p>{{item.comment}}</p>\r\n  </div>\r\n  <div>\r\n    <form @submit.prevent>\r\n      <input v-model=\"text\">\r\n      <button @click=\"postComment(post.post_id)\">comment</button>\r\n    </form>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapActions, mapState } from 'vuex'\r\n\r\nexport default {\r\n  computed:{...mapState(['postList','commentList','todayDate'])},\r\n  created(){\r\n    this.post = this.postList.find(this.findPost);\r\n    this.comment = this.commentList.filter(comment=>comment.post_id==this.$route.params.id);\r\n\r\n  },\r\n  methods:{\r\n    ...mapActions(['getCommentList']),\r\n    findPost(element){\r\n      if(element.post_id == this.$route.params.id){\r\n        return true;\r\n      }\r\n    },\r\n    postComment(id){\r\n      axios.post(`/api/community/comment/${id}`,{\r\n        text:this.text,\r\n        postDate:this.todayDate\r\n      })\r\n      .then(()=>{\r\n        this.getCommentList();\r\n        this.comment = this.commentList.find(this.findPost)\r\n      })\r\n      .catch((err)=>{\r\n        console.error(err);\r\n      })\r\n    },\r\n  },\r\n  data(){\r\n    return{\r\n      post:null,\r\n      text:null,\r\n      comment:[],\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}