{"ast":null,"code":"// import axios from 'axios'\nimport axios from 'axios';\nimport { createStore } from 'vuex'; // import axios from 'axios'\n\nlet today = new Date();\nlet year = today.getFullYear(); // 년도\n\nlet month = today.getMonth() + 1; // 월\n\nlet date = today.getDate(); // 날짜\n\nlet todayDate = `${year}-${month}-${date}`;\nconst store = createStore({\n  state() {\n    return {\n      //데이터 여기에 보관하기 vuex\n      category: '',\n      memberModal: false,\n      productModal: false,\n      warehousingModal: false,\n      salesModal: false,\n      inventoryModal: false,\n      productList: {},\n      memberList: {},\n      salesList: {},\n      warehousingList: {},\n      shipmentList: {},\n      user: null,\n      receivedList: {},\n      quantityList: {},\n      todayDate: todayDate,\n      statisticsMonth: null\n    };\n  },\n\n  getters: {\n    user: state => {\n      return state.user;\n    }\n  },\n  mutations: {\n    //state변경 함수를 정의\n    userSelect(state, payload) {\n      state.category = payload;\n    },\n\n    openMemberModal(state) {\n      state.memberModal = true;\n    },\n\n    closeMemberModal(state) {\n      state.memberModal = false;\n    },\n\n    openProductModal(state) {\n      state.productModal = true;\n    },\n\n    closeProductModal(state) {\n      state.productModal = false;\n    },\n\n    openWarehousingModal(state) {\n      state.warehousingModal = true;\n    },\n\n    closeWarehousingModal(state) {\n      state.warehousingModal = false;\n    },\n\n    openSalesModal(state) {\n      state.salesModal = true;\n    },\n\n    closeSalesModal(state) {\n      state.salesModal = false;\n    },\n\n    openInventoryModal(state) {\n      state.inventoryModal = true;\n    },\n\n    closeInventoryModal(state) {\n      state.inventoryModal = false;\n    },\n\n    setProductList(state, payload) {\n      state.productList = payload;\n    },\n\n    setMemberList(state, payload) {\n      state.memberList = payload;\n    },\n\n    setWarehousingList(state, payload) {\n      state.warehousingList = payload;\n    },\n\n    setSalesList(state, payload) {\n      state.salesList = payload;\n    },\n\n    setShipmentList(state, payload) {\n      state.shipmentList = payload;\n    },\n\n    setUser(state, user) {\n      state.user = user;\n    },\n\n    setReceivedList(state, payload) {\n      state.receivedList = payload;\n    },\n\n    setQuantityList(state, payload) {\n      state.quantityList = payload;\n    },\n\n    setStatisticsMonth(state, payload) {\n      state.statisticsData = payload;\n    }\n\n  },\n  actions: {\n    //ajax와같이 시간걸리는것\n    getProductList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/product/data/${id}`).then(res => {\n        context.commit('setProductList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getMemberList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/member/data/${id}`).then(res => {\n        context.commit('setMemberList', res.data);\n        console.log();\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getWarehousing(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/warehousing/stock/${id}`).then(res => {\n        context.commit('setWarehousingList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getSalesList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/sales/data/${id}`).then(res => {\n        context.commit('setSalesList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getReceived(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/inventory/received/${id}`).then(res => {\n        context.commit('setReceivedList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getShipmentList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/shipment/data/${id}`).then(res => {\n        context.commit('setShipmentList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getQuantity(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/inventory/quantity/${id}`).then(res => {\n        context.commit('setQuantityList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getStatisticsMonth(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/statistics/month/${id}`).then(res => {\n        context.commit('setStatisticsMonth', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","today","Date","year","getFullYear","month","getMonth","date","getDate","todayDate","store","state","category","memberModal","productModal","warehousingModal","salesModal","inventoryModal","productList","memberList","salesList","warehousingList","shipmentList","user","receivedList","quantityList","statisticsMonth","getters","mutations","userSelect","payload","openMemberModal","closeMemberModal","openProductModal","closeProductModal","openWarehousingModal","closeWarehousingModal","openSalesModal","closeSalesModal","openInventoryModal","closeInventoryModal","setProductList","setMemberList","setWarehousingList","setSalesList","setShipmentList","setUser","setReceivedList","setQuantityList","setStatisticsMonth","statisticsData","actions","getProductList","context","id","Coop_id","get","then","res","commit","data","catch","err","console","error","getMemberList","log","getWarehousing","getSalesList","getReceived","getShipmentList","getQuantity","getStatisticsMonth"],"sources":["D:/project/Inventory/front/src/store.js"],"sourcesContent":["// import axios from 'axios'\r\nimport axios from 'axios';\r\nimport { createStore } from 'vuex'\r\n// import axios from 'axios'\r\n\r\nlet today = new Date();\r\n\r\nlet year = today.getFullYear(); // 년도\r\nlet month = today.getMonth() + 1;  // 월\r\nlet date = today.getDate();  // 날짜\r\n\r\nlet todayDate = `${year}-${month}-${date}`\r\n\r\nconst store = createStore({\r\n\r\n    state() {\r\n        return {\r\n            //데이터 여기에 보관하기 vuex\r\n            category: '',\r\n            memberModal: false,\r\n            productModal: false,\r\n            warehousingModal: false,\r\n\r\n            salesModal: false,\r\n\r\n            inventoryModal: false,\r\n            productList: {},\r\n            memberList: {},\r\n            salesList: {},\r\n            warehousingList: {},\r\n            shipmentList: {},\r\n            user: null,\r\n            receivedList: {},\r\n            quantityList: {},\r\n            todayDate: todayDate,\r\n            statisticsMonth: null,\r\n\r\n        }\r\n    },\r\n    getters: {\r\n        user: (state) => { return state.user; }\r\n    },\r\n    mutations: {\r\n        //state변경 함수를 정의\r\n        userSelect(state, payload) {\r\n            state.category = payload;\r\n        },\r\n        openMemberModal(state) {\r\n            state.memberModal = true;\r\n        },\r\n        closeMemberModal(state) {\r\n            state.memberModal = false;\r\n        },\r\n        openProductModal(state) {\r\n            state.productModal = true;\r\n        },\r\n        closeProductModal(state) {\r\n            state.productModal = false;\r\n        },\r\n        openWarehousingModal(state) {\r\n            state.warehousingModal = true;\r\n        },\r\n        closeWarehousingModal(state) {\r\n            state.warehousingModal = false;\r\n        },\r\n\r\n        openSalesModal(state) {\r\n            state.salesModal = true;\r\n        },\r\n        closeSalesModal(state) {\r\n            state.salesModal = false;\r\n        },\r\n        openInventoryModal(state) {\r\n            state.inventoryModal = true;\r\n        },\r\n        closeInventoryModal(state) {\r\n            state.inventoryModal = false;\r\n\r\n        },\r\n        setProductList(state, payload) {\r\n            state.productList = payload;\r\n        },\r\n        setMemberList(state, payload) {\r\n            state.memberList = payload;\r\n        },\r\n        setWarehousingList(state, payload) {\r\n            state.warehousingList = payload;\r\n        },\r\n        setSalesList(state, payload) {\r\n            state.salesList = payload;\r\n        },\r\n        setShipmentList(state, payload) {\r\n            state.shipmentList = payload;\r\n        },\r\n        setUser(state, user) {\r\n            state.user = user;\r\n        },\r\n        setReceivedList(state, payload) {\r\n            state.receivedList = payload;\r\n        },\r\n        setQuantityList(state, payload) {\r\n            state.quantityList = payload;\r\n        },\r\n        setStatisticsMonth(state, payload){\r\n            state.statisticsData = payload;\r\n        }\r\n    },\r\n    actions: {\r\n\r\n        //ajax와같이 시간걸리는것\r\n        getProductList(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/product/data/${id}`,\r\n            )\r\n                .then((res) => {\r\n                    context.commit('setProductList', res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n\r\n        getMemberList(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/member/data/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setMemberList', res.data);\r\n                    console.log();\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n\r\n        getWarehousing(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/warehousing/stock/${id}`)\r\n                .then((res) => {\r\n\r\n                    context.commit('setWarehousingList', res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n        },\r\n\r\n\r\n        getSalesList(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/sales/data/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setSalesList', res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n\r\n        getReceived(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/inventory/received/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setReceivedList', res.data);\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n\r\n\r\n        getShipmentList(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/shipment/data/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setShipmentList', res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n\r\n        },\r\n        getQuantity(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/inventory/quantity/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setQuantityList', res.data);\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n\r\n        getStatisticsMonth(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/statistics/month/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setStatisticsMonth', res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport default store;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}