{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapMutations, mapState } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'inventoryRegister',\n  computed: { ...mapState(['inventoryModal', 'productList', 'memberList', 'user', 'todayDate'])\n  },\n  methods: { ...mapMutations(['closeInventoryModal']),\n    ...mapActions(['getQuantity']),\n\n    sendInventoryData() {\n      axios.post(`/api/inventory/registration/${this.user.Coop_id}`, {\n        member: this.member,\n        product: this.product,\n        amount: this.amount,\n        date: this.date,\n        price: this.price,\n        quality: this.quality\n      }).then(() => {\n        this.getQuantity();\n        this.$emit('inventoryRegister');\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    registerInventory() {\n      if (this.member && this.product && this.amount && this.date && this.price && this.quality) {\n        this.sendInventoryData();\n        return true;\n      }\n\n      this.errors = [];\n\n      if (!this.member) {\n        this.errors.push(' member required');\n      }\n\n      if (!this.product) {\n        this.errors.push(' product required');\n      }\n\n      if (!this.amount) {\n        this.errors.push(' amount required');\n      }\n\n      if (!this.date) {\n        this.errors.push(' date required');\n      }\n\n      if (!this.price) {\n        this.errors.push(' price required');\n      }\n\n      if (!this.quality) {\n        this.errors.push(' quality required');\n      }\n\n      alert(this.errors);\n    }\n\n  },\n\n  data() {\n    return {\n      errors: [],\n      member: null,\n      product: null,\n      amount: null,\n      date: null,\n      price: null,\n      quality: null\n    };\n  }\n\n};","map":{"version":3,"mappings":";AAwDA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,QAAmD,MAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACXC,IAAI,EAAC,mBADM;EAEXC,QAAQ,EAAC,EACL,GAAGH,QAAQ,CAAC,CAAC,gBAAD,EAAkB,aAAlB,EAAgC,YAAhC,EAA6C,MAA7C,EAAoD,WAApD,CAAD;EADN,CAFE;EAKXI,OAAO,EAAC,EACJ,GAAGL,YAAY,CAAC,CAAC,qBAAD,CAAD,CADX;IAEJ,GAAGD,UAAU,CAAC,CAAC,aAAD,CAAD,CAFT;;IAIJO,iBAAiB,GAAE;MAEnBJ,KAAK,CAACK,IAAN,CAAY,+BAA8B,KAAKC,IAAL,CAAUC,OAAQ,EAA5D,EAA8D;QAC5DC,MAAK,EAAI,KAAKA,MAD8C;QAE5DC,OAAM,EAAI,KAAKA,OAF6C;QAG5DC,MAAK,EAAI,KAAKA,MAH8C;QAI5DC,IAAG,EAAI,KAAKA,IAJgD;QAK5DC,KAAI,EAAI,KAAKA,KAL+C;QAM5DC,OAAM,EAAI,KAAKA;MAN6C,CAA9D,EASCC,IATD,CASM,MAAI;QACN,KAAKC,WAAL;QACA,KAAKC,KAAL,CAAW,mBAAX;MACH,CAZD,EAaCC,KAbD,CAaQC,GAAD,IAAO;QACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACD,CAfD;IAgBD,CAtBK;;IAwBNG,iBAAiB,GAAE;MACjB,IAAG,KAAKb,MAAL,IAAe,KAAKC,OAApB,IAA+B,KAAKC,MAApC,IAA8C,KAAKC,IAAnD,IAA2D,KAAKC,KAAhE,IAAyE,KAAKC,OAAjF,EAAyF;QAEvF,KAAKT,iBAAL;QACA,OAAO,IAAP;MACF;;MAEA,KAAKkB,MAAL,GAAc,EAAd;;MAEA,IAAG,CAAC,KAAKd,MAAT,EAAgB;QACd,KAAKc,MAAL,CAAYC,IAAZ,CAAiB,kBAAjB;MACF;;MACA,IAAG,CAAC,KAAKd,OAAT,EAAiB;QACf,KAAKa,MAAL,CAAYC,IAAZ,CAAiB,mBAAjB;MACF;;MACA,IAAG,CAAC,KAAKb,MAAT,EAAgB;QACd,KAAKY,MAAL,CAAYC,IAAZ,CAAiB,kBAAjB;MACF;;MACA,IAAG,CAAC,KAAKZ,IAAT,EAAc;QACZ,KAAKW,MAAL,CAAYC,IAAZ,CAAiB,gBAAjB;MACF;;MACA,IAAG,CAAC,KAAKX,KAAT,EAAe;QACb,KAAKU,MAAL,CAAYC,IAAZ,CAAiB,iBAAjB;MACF;;MACA,IAAG,CAAC,KAAKV,OAAT,EAAiB;QACf,KAAKS,MAAL,CAAYC,IAAZ,CAAiB,mBAAjB;MACF;;MAEAC,KAAK,CAAC,KAAKF,MAAN,CAAL;IAED;;EAtDK,CALG;;EA6DXG,IAAI,GAAE;IACF,OAAM;MACFH,MAAM,EAAC,EADL;MAEFd,MAAM,EAAC,IAFL;MAGFC,OAAO,EAAC,IAHN;MAIFC,MAAM,EAAC,IAJL;MAKFC,IAAI,EAAC,IALH;MAMFC,KAAK,EAAC,IANJ;MAOFC,OAAO,EAAC;IAPN,CAAN;EAUH;;AAxEU,CAAf","names":["mapActions","mapMutations","mapState","axios","name","computed","methods","sendInventoryData","post","user","Coop_id","member","product","amount","date","price","quality","then","getQuantity","$emit","catch","err","console","error","registerInventory","errors","push","alert","data"],"sourceRoot":"","sources":["C:\\Users\\J.H.Lee\\Documents\\ProjectFiles\\Inventory Management\\front\\src\\components\\inventoryRegister.vue"],"sourcesContent":["<template>\r\n\r\n<div class=\"modal-bg\">\r\n    <div class=\"registerModal\">\r\n      <div class=\"modalContent\">\r\n        <div class=\"modalHeader\">\r\n          <h1>New Inventory Register</h1>\r\n        </div>\r\n  \r\n        <form id=\"registerForm\" @submit.prevent>\r\n          <div class=\"modalBody\">\r\n            <div class=\"input-group mb-4\">  \r\n              <label class=\"input-group-text\" id=\"inputGroup-sizing-default\" >Product</label>\r\n              <select v-model=\"product\">\r\n                <option v-for=\"(item) in productList\" :key=\"item\" :value=\"item.Product_id\">{{item.Product_name}}</option>\r\n              </select>\r\n              <label class=\"input-group-text\" id=\"inputGroup-sizing-default\" >Member</label>\r\n              <select v-model=\"member\">\r\n                <option>None</option>\r\n                <option v-for=\"(item) in memberList\" :key=\"item\" :value=\"item.Member_id\">{{item.Member_name}}</option>\r\n              </select>\r\n\r\n            </div>\r\n\r\n            <div class=\"input-group mb-4\">\r\n              <label class=\"input-group-text\" id=\"inputGroup-sizing-default\" >Amount</label>\r\n              <input type=\"number\" min=\"0\" class=\"form-control\" name=\"amount\" id=\"amount\" v-model=\"amount\">\r\n            </div>\r\n\r\n            <div class=\"input-group mb-4\">\r\n              <label class=\"input-group-text\" id=\"inputGroup-sizing-default\" >Received Date</label>\r\n              <input type=\"date\" class=\"form-control\" name=\"date\" id=\"date\" required pattern=\"\\d{4}-\\d{2}-\\d{2}\" v-model=\"date\">\r\n            </div>\r\n\r\n            <div class=\"input-group mb-4\">\r\n              <label class=\"input-group-text\" id=\"inputGroup-sizing-default\" >Price</label>\r\n              <input type=\"number\" min=\"0\" class=\"form-control\" name=\"price\" id=\"price\" v-model=\"price\">\r\n            </div>\r\n\r\n            <div class=\"input-group mb-4\">\r\n              <label class=\"input-group-text\" id=\"inputGroup-sizing-default\" >Quality</label>\r\n              <input type=\"number\" min=\"0\" class=\"form-control\" name=\"quality\" id=\"quality\" v-model=\"quality\">\r\n            </div>\r\n          </div>\r\n          <div class=\"modalFooter\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" @click=\"registerInventory()\">Register</button>\r\n            <button class=\"btn btn-secondary \" @click=\"closeInventoryModal()\">Close</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapMutations, mapState } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name:'inventoryRegister',\r\n    computed:{\r\n        ...mapState(['inventoryModal','productList','memberList','user','todayDate'])\r\n    },\r\n    methods:{\r\n        ...mapMutations(['closeInventoryModal']),\r\n        ...mapActions(['getQuantity']),\r\n\r\n        sendInventoryData(){\r\n        \r\n        axios.post(`/api/inventory/registration/${this.user.Coop_id}`,{\r\n          member : this.member,\r\n          product : this.product, \r\n          amount : this.amount,\r\n          date : this.date,\r\n          price : this.price,\r\n          quality : this.quality,\r\n          \r\n        })\r\n        .then(()=>{\r\n            this.getQuantity();\r\n            this.$emit('inventoryRegister');\r\n        })\r\n        .catch((err)=>{\r\n          console.error(err);\r\n        })\r\n      },\r\n  \r\n      registerInventory(){\r\n        if(this.member && this.product && this.amount && this.date && this.price && this.quality){\r\n\r\n          this.sendInventoryData();\r\n          return true;\r\n        }\r\n\r\n        this.errors = [];\r\n\r\n        if(!this.member){\r\n          this.errors.push(' member required');\r\n        }\r\n        if(!this.product){\r\n          this.errors.push(' product required');\r\n        }\r\n        if(!this.amount){\r\n          this.errors.push(' amount required');\r\n        }\r\n        if(!this.date){\r\n          this.errors.push(' date required');\r\n        }\r\n        if(!this.price){\r\n          this.errors.push(' price required');\r\n        }\r\n        if(!this.quality){\r\n          this.errors.push(' quality required');\r\n        }\r\n\r\n        alert(this.errors);\r\n  \r\n      },\r\n    },\r\n    data(){\r\n        return{\r\n            errors:[],\r\n            member:null,\r\n            product:null,\r\n            amount:null,\r\n            date:null,\r\n            price:null,\r\n            quality:null,\r\n            \r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}