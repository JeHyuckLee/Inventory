{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h5\", null, _toDisplayString($data.post.author), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.post.post_date), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.post.text), 1\n  /* TEXT */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.commentList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"post-comment\",\n      key: item\n    }, [_createElementVNode(\"h5\", null, _toDisplayString(item.author), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(item.postdate), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(item.text), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.postComment($data.post.post_id))\n  }, \"comment\")], 32\n  /* HYDRATE_EVENTS */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;6DAAXC,oBAQM,KARN,cAQM,CAPJA,oBAEK,IAFL,EAEK,IAFL,EAEKC,iBADDC,WAAKC,MACJ,CAFL,EACe;EAAA;EADf,CAOI,EAJJH,oBAEI,GAFJ,EAEI,IAFJ,EAEIC,iBADAC,WAAKE,SACL,CAFJ,EACkB;EAAA;EADlB,CAII,EADJJ,oBAAoB,GAApB,EAAoB,IAApB,EAAoBC,iBAAfC,WAAKG,IAAU,CAApB,EAAc;EAAA;EAAd,CACI,CARN,sBASAC,oBAIMC,SAJN,EAIM,IAJN,EAIMC,YAJmCC,gBAInC,EAJ2BC,IAAmB,IAAf;yBAArCJ,oBAIM,KAJN,EAIM;MAJDP,KAAK,EAAC,cAIL;MAJiDY,GAAG,EAAED;IAItD,CAJN,GACEV,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBC,iBAAlBS,IAAI,CAACP,MAAa,CAAxB,EAAiB;IAAA;IAAjB,GACAH,oBAAwB,GAAxB,EAAwB,IAAxB,EAAwBC,iBAAnBS,IAAI,CAACE,QAAc,CAAxB,EAAkB;IAAA;IAAlB,GACAZ,oBAAoB,GAApB,EAAoB,IAApB,EAAoBC,iBAAfS,IAAI,CAACL,IAAU,CAApB,EAAc;IAAA;IAAd,EAHF;GAIM,CAJN;;EAAA,IAKAL,oBAMM,KANN,EAMM,IANN,EAMM,CALJA,oBAGO,MAHP,EAGO;IAHAa,QAAM,2CAAP,OAAe,CAAR,EAAQ,WAAR;EAGN,CAHP,mBACEb,oBAAsB,OAAtB,EAAsB;+DAANE,aAAIY;EAAE,CAAtB;;EAAA,kBAAgBZ,eAChBF,oBAA2D,QAA3D,EAA2D;IAAlDe,OAAK,sCAAEC,qBAAYd,WAAKe,OAAjB,CAAF;EAA6C,CAA3D,EAA2C,SAA3C,EAFF;;EAAA,CAKI,CANN","names":["class","_createElementVNode","_toDisplayString","$data","author","post_date","text","_createElementBlock","_Fragment","_renderList","_ctx","item","key","postdate","onSubmit","$event","onClick","$options","post_id"],"sourceRoot":"","sources":["C:\\Users\\J.H.Lee\\Documents\\ProjectFiles\\Inventory Management\\Inventory\\front\\src\\pages\\Monitoring\\CommunityDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-content\">\r\n    <h5>\r\n      {{post.author}}\r\n    </h5>\r\n    <p>\r\n      {{post.post_date}}\r\n    </p>\r\n    <p>{{post.text}}</p>\r\n  </div>\r\n  <div class=\"post-comment\" v-for=\"item in commentList\" :key=\"item\">\r\n    <h5>{{item.author}}</h5>\r\n    <p>{{item.postdate}}</p>\r\n    <p>{{item.text}}</p>\r\n  </div>\r\n  <div>\r\n    <form @submit.prevent>\r\n      <input v-model=\"text\">\r\n      <button @click=\"postComment(post.post_id)\">comment</button>\r\n    </form>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapActions, mapState } from 'vuex'\r\n\r\nexport default {\r\n  computed:{...mapState(['postList','commentList','todayDate'])},\r\n  created(){\r\n    this.post = this.postList.find(this.findPost);\r\n    this.comment = this.commentList.find(this.findPost)\r\n\r\n  },\r\n  methods:{\r\n    ...mapActions(['getCommentList']),\r\n    findPost(element){\r\n      if(element.post_id == this.$route.params.id){\r\n        return true;\r\n      }\r\n    },\r\n    postComment(id){\r\n      axios.post(`/api/community/comment/${id}`,{\r\n        text:this.text,\r\n        postDate:this.todayDate\r\n      })\r\n      .then(()=>{\r\n        this.getCommentList();\r\n        this.comment = this.commentList.find(this.findPost)\r\n      })\r\n      .catch((err)=>{\r\n        console.error(err);\r\n      })\r\n    },\r\n  },\r\n  data(){\r\n    return{\r\n      post:null,\r\n      text:null,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}