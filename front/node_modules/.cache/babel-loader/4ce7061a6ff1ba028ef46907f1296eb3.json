{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\", true);\n\n  return _openBlock(), _createBlock(_component_line_chart, {\n    options: $props.options,\n    chartData: _ctx.chartData\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"chartData\"]);\n}","map":{"version":3,"mappings":";;;;uBACAA,aAAmEC,qBAAnE,EAAmE;IAAtDC,OAAO,EAAEC,cAA6C;IAAnCC,SAAS,EAAEC;EAAwB,CAAnE;;EAAA","names":["_createBlock","_component_line_chart","options","$props","chartData","_ctx"],"sourceRoot":"","sources":["D:\\project\\Inventory\\front\\src\\components\\LineChart.vue"],"sourcesContent":["<template>\r\n<line-chart :options=\"options\" :chartData=\"chartData\"></line-chart>\r\n</template>\r\n\r\n<script>\r\nimport { Line, mixins } from 'vue-chartjs' //또는 'vue-chartjs/legacy'\r\nconst { reactiveProp } = mixins\r\n\r\nexport default {\r\n  extends: Line,\r\n  mixins: [reactiveProp],\r\n  props: ['options'],\r\n  mounted() {\r\n    // this.chartData is created in the mixin.\r\n    // If you want to pass options please create a local options object\r\n    this.renderChart(this.chartData, this.options)\r\n  },\r\n  chartData: {\r\n    labels: ['4 / 8', '4 / 9', '4 / 10', '4 / 11', '4 / 12', '4 / 13', '4 / 14', '4 / 15', '4 / 16', '4 / 17'],\r\n    datasets: [\r\n      {\r\n        borderWidth: 1, // 라인 넓이\r\n        label: '총 수면 시간', // 데이터 라벨\r\n        backgroundColor: 'rgb(255,255,255, 0)',\r\n        pointBackgroundColor: '#64CCA2',\r\n        fill: true, // 채우기\r\n        // barPercentage: 1, 바 안쪽 넓이\r\n        // categoryPercentage: 0.5, 바 외부 넓이\r\n        tension: 0.1,\r\n        borderColor: '#64CCA2',\r\n        pointBorderColor: '#64CCA2',\r\n        pointBorderWidth: 1,\r\n        data: [45, 50, 60, 50, 45, 80, 50, 40, 68, 70],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: false, // 쌓임\r\n          display: true, // x 축 show\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: '날짜',\r\n          },\r\n          grid: {\r\n            drawBorder: false,\r\n            color: '#323232',\r\n            lineWidth: 1,\r\n          },\r\n          ticks: {\r\n            beginAtZero: true, // 0부터 시작\r\n            padding: 0,\r\n          },\r\n        },\r\n      ],\r\n      // y축 옵션\r\n      yAxes: [\r\n        {\r\n          stacked: false, // 쌓임\r\n          display: true, // y 축 show\r\n          ticks: {\r\n            stepSize: 20, // 증가범위\r\n            beginAtZero: true,\r\n            max: 100, // 최대범위\r\n            min: 0, // 최소범위\r\n            padding: 10, // 오른쪽 간격\r\n          },\r\n          grid: {\r\n            drawBorder: false,\r\n            color: '#323232',\r\n            lineWidth: 1,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}