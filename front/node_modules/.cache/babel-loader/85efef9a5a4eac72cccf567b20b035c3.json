{"ast":null,"code":"// import axios from 'axios'\nimport axios from 'axios';\nimport { createStore } from 'vuex'; // import axios from 'axios'\n\nlet today = new Date();\nlet year = today.getFullYear(); // 년도\n\nlet month = today.getMonth() + 1; // 월\n\nlet date = today.getDate(); // 날짜\n\nlet todayDate = `${year}-${month}-${date}`;\nconst store = createStore({\n  state() {\n    return {\n      //데이터 여기에 보관하기 vuex\n      category: '',\n      memberModal: false,\n      productModal: false,\n      warehousingModal: false,\n      salesModal: false,\n      inventoryModal: false,\n      productList: {},\n      memberList: {},\n      salesList: {},\n      warehousingList: {},\n      shipmentList: {},\n      user: null,\n      receivedList: {},\n      quantityList: {},\n      todayDate: todayDate\n    };\n  },\n\n  getters: {\n    user: state => {\n      return state.user;\n    }\n  },\n  mutations: {\n    //state변경 함수를 정의\n    userSelect(state, payload) {\n      state.category = payload;\n    },\n\n    openMemberModal(state) {\n      state.memberModal = true;\n    },\n\n    closeMemberModal(state) {\n      state.memberModal = false;\n    },\n\n    openProductModal(state) {\n      state.productModal = true;\n    },\n\n    closeProductModal(state) {\n      state.productModal = false;\n    },\n\n    openWarehousingModal(state) {\n      state.warehousingModal = true;\n    },\n\n    closeWarehousingModal(state) {\n      state.warehousingModal = false;\n    },\n\n    openSalesModal(state) {\n      state.salesModal = true;\n    },\n\n    closeSalesModal(state) {\n      state.salesModal = false;\n    },\n\n    openInventoryModal(state) {\n      state.inventoryModal = true;\n    },\n\n    closeInventoryModal(state) {\n      state.inventoryModal = false;\n    },\n\n    setProductList(state, payload) {\n      state.productList = payload;\n    },\n\n    setMemberList(state, payload) {\n      state.memberList = payload;\n    },\n\n    setWarehousingList(state, payload) {\n      state.warehousingList = payload;\n    },\n\n    setSalesList(state, payload) {\n      state.salesList = payload;\n    },\n\n    setShipmentList(state, payload) {\n      state.shipmentList = payload;\n    },\n\n    setUser(state, user) {\n      state.user = user;\n    },\n\n    setReceivedList(state, payload) {\n      state.receivedList = payload;\n    },\n\n    setQuantityList(state, payload) {\n      state.quantityList = payload;\n    }\n\n  },\n  actions: {\n    //ajax와같이 시간걸리는것\n    getProductList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/product/data/${id}`).then(res => {\n        context.commit('setProductList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getMemberList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/member/data/${id}`).then(res => {\n        context.commit('setMemberList', res.data);\n        console.log();\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getWarehousing(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/warehousing/stock/${id}`).then(res => {\n        context.commit('setWarehousingList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getSalesList(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/sales/data/${id}`).then(res => {\n        context.commit('setSalesList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getReceived(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/inventory/received/${id}`).then(res => {\n        context.commit('setReceivedList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getShipmentList(context) {\n      axios.get(`/api/shipment/data`).then(res => {\n        context.commit('setShipmentList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    getQuantity(context) {\n      let id = context.state.user.Coop_id;\n      axios.get(`/api/inventory/quantity/${id}`).then(res => {\n        context.commit('setQuantityList', res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","today","Date","year","getFullYear","month","getMonth","date","getDate","todayDate","store","state","category","memberModal","productModal","warehousingModal","salesModal","inventoryModal","productList","memberList","salesList","warehousingList","shipmentList","user","receivedList","quantityList","getters","mutations","userSelect","payload","openMemberModal","closeMemberModal","openProductModal","closeProductModal","openWarehousingModal","closeWarehousingModal","openSalesModal","closeSalesModal","openInventoryModal","closeInventoryModal","setProductList","setMemberList","setWarehousingList","setSalesList","setShipmentList","setUser","setReceivedList","setQuantityList","actions","getProductList","context","id","Coop_id","get","then","res","commit","data","catch","err","console","error","getMemberList","log","getWarehousing","getSalesList","getReceived","getShipmentList","getQuantity"],"sources":["D:/project/Inventory/front/src/store.js"],"sourcesContent":["// import axios from 'axios'\r\nimport axios from 'axios';\r\nimport {createStore} from 'vuex'\r\n// import axios from 'axios'\r\n\r\nlet today = new Date();   \r\n\r\nlet year = today.getFullYear(); // 년도\r\nlet month = today.getMonth() + 1;  // 월\r\nlet date = today.getDate();  // 날짜\r\n\r\nlet todayDate = `${year}-${month}-${date}`\r\n\r\nconst store = createStore({\r\n    \r\n    state(){\r\n        return{\r\n            //데이터 여기에 보관하기 vuex\r\n            category:'',\r\n            memberModal:false,\r\n            productModal:false,\r\n            warehousingModal:false,\r\n\r\n            salesModal:false,\r\n\r\n            inventoryModal:false,\r\n            productList:{},\r\n            memberList:{},\r\n            salesList:{},\r\n            warehousingList:{},\r\n            shipmentList:{},\r\n            user: null,\r\n            receivedList:{},\r\n            quantityList:{},\r\n            todayDate: todayDate,\r\n\r\n        }\r\n    },\r\n    getters: {\r\n        user: (state) => { return state.user; }\r\n    },\r\n    mutations:{\r\n        //state변경 함수를 정의\r\n        userSelect(state, payload){\r\n            state.category = payload;\r\n        },\r\n        openMemberModal(state){\r\n            state.memberModal=true;\r\n        },\r\n        closeMemberModal(state){\r\n            state.memberModal=false;\r\n        },\r\n        openProductModal(state){\r\n            state.productModal = true;\r\n        },\r\n        closeProductModal(state){\r\n            state.productModal = false;\r\n        },\r\n        openWarehousingModal(state){\r\n            state.warehousingModal = true;\r\n        },\r\n        closeWarehousingModal(state){\r\n            state.warehousingModal = false;\r\n        },\r\n\r\n        openSalesModal(state){\r\n            state.salesModal=true;\r\n        },\r\n        closeSalesModal(state){\r\n            state.salesModal=false;\r\n        },\r\n        openInventoryModal(state){\r\n            state.inventoryModal = true;\r\n        },\r\n        closeInventoryModal(state){\r\n            state.inventoryModal = false;\r\n\r\n        },\r\n        setProductList(state,payload){\r\n            state.productList = payload;\r\n        },\r\n        setMemberList(state,payload){\r\n            state.memberList = payload;\r\n        },\r\n        setWarehousingList(state,payload){\r\n            state.warehousingList = payload;\r\n        },\r\n        setSalesList(state,payload){\r\n            state.salesList = payload;\r\n        },\r\n        setShipmentList(state,payload){\r\n            state.shipmentList = payload;\r\n        },\r\n        setUser(state, user) {\r\n            state.user = user;\r\n        },\r\n        setReceivedList(state,payload){\r\n            state.receivedList = payload;\r\n        },\r\n        setQuantityList(state,payload){\r\n            state.quantityList = payload;\r\n        }\r\n    },\r\n    actions:{\r\n        //ajax와같이 시간걸리는것\r\n        getProductList(context){\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/product/data/${id}`,\r\n            )\r\n            .then((res)=>{\r\n                context.commit('setProductList',res.data);\r\n            })\r\n            .catch((err)=>{\r\n                console.error(err);\r\n            })\r\n        },\r\n \r\n        getMemberList(context){\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/member/data/${id}`)\r\n            .then((res)=>{\r\n                context.commit('setMemberList',res.data);\r\n                console.log();\r\n                \r\n            })\r\n            .catch((err)=>{\r\n                console.error(err);\r\n            })\r\n        },\r\n\r\n        getWarehousing(context){\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/warehousing/stock/${id}`)\r\n            .then((res) => {\r\n\r\n            context.commit('setWarehousingList',res.data);\r\n            })\r\n            .catch((err) => {\r\n            console.error(err);\r\n            });\r\n        },\r\n\r\n\r\n        getSalesList(context) {\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/sales/data/${id}`)\r\n                .then((res) => {\r\n                    context.commit('setSalesList', res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n        getReceived(context){\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/inventory/received/${id}`)\r\n            .then((res)=>{\r\n                context.commit('setReceivedList',res.data);\r\n\r\n            })\r\n            .catch((err)=>{\r\n                console.error(err);\r\n            })\r\n        },\r\n\r\n\r\n        getShipmentList(context){\r\n            axios.get(`/api/shipment/data`)\r\n            .then((res)=>{\r\n                context.commit('setShipmentList',res.data);\r\n            })\r\n            .catch((err)=>{\r\n                console.error(err);\r\n            })\r\n        },\r\n\r\n        getQuantity(context){\r\n            let id = context.state.user.Coop_id;\r\n            axios.get(`/api/inventory/quantity/${id}`)\r\n            .then((res)=>{\r\n                context.commit('setQuantityList',res.data);\r\n\r\n            })\r\n            .catch((err)=>{\r\n                console.error(err);\r\n            })\r\n\r\n        },\r\n\r\n\r\n\r\n        }\r\n\r\n})\r\n\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,MAA1B,C,CACA;;AAEA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AAEA,IAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAX,C,CAAgC;;AAChC,IAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,KAAmB,CAA/B,C,CAAmC;;AACnC,IAAIC,IAAI,GAAGN,KAAK,CAACO,OAAN,EAAX,C,CAA6B;;AAE7B,IAAIC,SAAS,GAAI,GAAEN,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAzC;AAEA,MAAMG,KAAK,GAAGV,WAAW,CAAC;EAEtBW,KAAK,GAAE;IACH,OAAM;MACF;MACAC,QAAQ,EAAC,EAFP;MAGFC,WAAW,EAAC,KAHV;MAIFC,YAAY,EAAC,KAJX;MAKFC,gBAAgB,EAAC,KALf;MAOFC,UAAU,EAAC,KAPT;MASFC,cAAc,EAAC,KATb;MAUFC,WAAW,EAAC,EAVV;MAWFC,UAAU,EAAC,EAXT;MAYFC,SAAS,EAAC,EAZR;MAaFC,eAAe,EAAC,EAbd;MAcFC,YAAY,EAAC,EAdX;MAeFC,IAAI,EAAE,IAfJ;MAgBFC,YAAY,EAAC,EAhBX;MAiBFC,YAAY,EAAC,EAjBX;MAkBFhB,SAAS,EAAEA;IAlBT,CAAN;EAqBH,CAxBqB;;EAyBtBiB,OAAO,EAAE;IACLH,IAAI,EAAGZ,KAAD,IAAW;MAAE,OAAOA,KAAK,CAACY,IAAb;IAAoB;EADlC,CAzBa;EA4BtBI,SAAS,EAAC;IACN;IACAC,UAAU,CAACjB,KAAD,EAAQkB,OAAR,EAAgB;MACtBlB,KAAK,CAACC,QAAN,GAAiBiB,OAAjB;IACH,CAJK;;IAKNC,eAAe,CAACnB,KAAD,EAAO;MAClBA,KAAK,CAACE,WAAN,GAAkB,IAAlB;IACH,CAPK;;IAQNkB,gBAAgB,CAACpB,KAAD,EAAO;MACnBA,KAAK,CAACE,WAAN,GAAkB,KAAlB;IACH,CAVK;;IAWNmB,gBAAgB,CAACrB,KAAD,EAAO;MACnBA,KAAK,CAACG,YAAN,GAAqB,IAArB;IACH,CAbK;;IAcNmB,iBAAiB,CAACtB,KAAD,EAAO;MACpBA,KAAK,CAACG,YAAN,GAAqB,KAArB;IACH,CAhBK;;IAiBNoB,oBAAoB,CAACvB,KAAD,EAAO;MACvBA,KAAK,CAACI,gBAAN,GAAyB,IAAzB;IACH,CAnBK;;IAoBNoB,qBAAqB,CAACxB,KAAD,EAAO;MACxBA,KAAK,CAACI,gBAAN,GAAyB,KAAzB;IACH,CAtBK;;IAwBNqB,cAAc,CAACzB,KAAD,EAAO;MACjBA,KAAK,CAACK,UAAN,GAAiB,IAAjB;IACH,CA1BK;;IA2BNqB,eAAe,CAAC1B,KAAD,EAAO;MAClBA,KAAK,CAACK,UAAN,GAAiB,KAAjB;IACH,CA7BK;;IA8BNsB,kBAAkB,CAAC3B,KAAD,EAAO;MACrBA,KAAK,CAACM,cAAN,GAAuB,IAAvB;IACH,CAhCK;;IAiCNsB,mBAAmB,CAAC5B,KAAD,EAAO;MACtBA,KAAK,CAACM,cAAN,GAAuB,KAAvB;IAEH,CApCK;;IAqCNuB,cAAc,CAAC7B,KAAD,EAAOkB,OAAP,EAAe;MACzBlB,KAAK,CAACO,WAAN,GAAoBW,OAApB;IACH,CAvCK;;IAwCNY,aAAa,CAAC9B,KAAD,EAAOkB,OAAP,EAAe;MACxBlB,KAAK,CAACQ,UAAN,GAAmBU,OAAnB;IACH,CA1CK;;IA2CNa,kBAAkB,CAAC/B,KAAD,EAAOkB,OAAP,EAAe;MAC7BlB,KAAK,CAACU,eAAN,GAAwBQ,OAAxB;IACH,CA7CK;;IA8CNc,YAAY,CAAChC,KAAD,EAAOkB,OAAP,EAAe;MACvBlB,KAAK,CAACS,SAAN,GAAkBS,OAAlB;IACH,CAhDK;;IAiDNe,eAAe,CAACjC,KAAD,EAAOkB,OAAP,EAAe;MAC1BlB,KAAK,CAACW,YAAN,GAAqBO,OAArB;IACH,CAnDK;;IAoDNgB,OAAO,CAAClC,KAAD,EAAQY,IAAR,EAAc;MACjBZ,KAAK,CAACY,IAAN,GAAaA,IAAb;IACH,CAtDK;;IAuDNuB,eAAe,CAACnC,KAAD,EAAOkB,OAAP,EAAe;MAC1BlB,KAAK,CAACa,YAAN,GAAqBK,OAArB;IACH,CAzDK;;IA0DNkB,eAAe,CAACpC,KAAD,EAAOkB,OAAP,EAAe;MAC1BlB,KAAK,CAACc,YAAN,GAAqBI,OAArB;IACH;;EA5DK,CA5BY;EA0FtBmB,OAAO,EAAC;IACJ;IACAC,cAAc,CAACC,OAAD,EAAS;MACnB,IAAIC,EAAE,GAAGD,OAAO,CAACvC,KAAR,CAAcY,IAAd,CAAmB6B,OAA5B;MACArD,KAAK,CAACsD,GAAN,CAAW,qBAAoBF,EAAG,EAAlC,EAECG,IAFD,CAEOC,GAAD,IAAO;QACTL,OAAO,CAACM,MAAR,CAAe,gBAAf,EAAgCD,GAAG,CAACE,IAApC;MACH,CAJD,EAKCC,KALD,CAKQC,GAAD,IAAO;QACVC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CAPD;IAQH,CAZG;;IAcJG,aAAa,CAACZ,OAAD,EAAS;MAClB,IAAIC,EAAE,GAAGD,OAAO,CAACvC,KAAR,CAAcY,IAAd,CAAmB6B,OAA5B;MACArD,KAAK,CAACsD,GAAN,CAAW,oBAAmBF,EAAG,EAAjC,EACCG,IADD,CACOC,GAAD,IAAO;QACTL,OAAO,CAACM,MAAR,CAAe,eAAf,EAA+BD,GAAG,CAACE,IAAnC;QACAG,OAAO,CAACG,GAAR;MAEH,CALD,EAMCL,KAND,CAMQC,GAAD,IAAO;QACVC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CARD;IASH,CAzBG;;IA2BJK,cAAc,CAACd,OAAD,EAAS;MACnB,IAAIC,EAAE,GAAGD,OAAO,CAACvC,KAAR,CAAcY,IAAd,CAAmB6B,OAA5B;MACArD,KAAK,CAACsD,GAAN,CAAW,0BAAyBF,EAAG,EAAvC,EACCG,IADD,CACOC,GAAD,IAAS;QAEfL,OAAO,CAACM,MAAR,CAAe,oBAAf,EAAoCD,GAAG,CAACE,IAAxC;MACC,CAJD,EAKCC,KALD,CAKQC,GAAD,IAAS;QAChBC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACC,CAPD;IAQH,CArCG;;IAwCJM,YAAY,CAACf,OAAD,EAAU;MAClB,IAAIC,EAAE,GAAGD,OAAO,CAACvC,KAAR,CAAcY,IAAd,CAAmB6B,OAA5B;MACArD,KAAK,CAACsD,GAAN,CAAW,mBAAkBF,EAAG,EAAhC,EACKG,IADL,CACWC,GAAD,IAAS;QACXL,OAAO,CAACM,MAAR,CAAe,cAAf,EAA+BD,GAAG,CAACE,IAAnC;MACH,CAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;QACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CANL;IAOH,CAjDG;;IAkDJO,WAAW,CAAChB,OAAD,EAAS;MAChB,IAAIC,EAAE,GAAGD,OAAO,CAACvC,KAAR,CAAcY,IAAd,CAAmB6B,OAA5B;MACArD,KAAK,CAACsD,GAAN,CAAW,2BAA0BF,EAAG,EAAxC,EACCG,IADD,CACOC,GAAD,IAAO;QACTL,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAiCD,GAAG,CAACE,IAArC;MAEH,CAJD,EAKCC,KALD,CAKQC,GAAD,IAAO;QACVC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CAPD;IAQH,CA5DG;;IA+DJQ,eAAe,CAACjB,OAAD,EAAS;MACpBnD,KAAK,CAACsD,GAAN,CAAW,oBAAX,EACCC,IADD,CACOC,GAAD,IAAO;QACTL,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAiCD,GAAG,CAACE,IAArC;MACH,CAHD,EAICC,KAJD,CAIQC,GAAD,IAAO;QACVC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CAND;IAOH,CAvEG;;IAyEJS,WAAW,CAAClB,OAAD,EAAS;MAChB,IAAIC,EAAE,GAAGD,OAAO,CAACvC,KAAR,CAAcY,IAAd,CAAmB6B,OAA5B;MACArD,KAAK,CAACsD,GAAN,CAAW,2BAA0BF,EAAG,EAAxC,EACCG,IADD,CACOC,GAAD,IAAO;QACTL,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAiCD,GAAG,CAACE,IAArC;MAEH,CAJD,EAKCC,KALD,CAKQC,GAAD,IAAO;QACVC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CAPD;IASH;;EApFG;AA1Fc,CAAD,CAAzB;AAuLA,eAAejD,KAAf"},"metadata":{},"sourceType":"module"}